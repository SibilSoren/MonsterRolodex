{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/input-box/input-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","key","email","CardList","monsters","map","InputBox","type","placeholder","onChange","onSearchChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAA6BL,EAAMI,QAAQE,MAAlCN,EAAMI,QAAQG,KACvB,4BAAIP,EAAMI,QAAQI,YCJbC,G,MAAW,SAACT,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMU,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,WCLhCO,G,MAAW,SAACZ,GACvB,OACE,8BACE,uBACEC,UAAU,aACVY,KAAK,SACLC,YAAY,kBACZC,SAAUf,EAAMgB,qBCgCTC,E,kDAnCb,aAAe,IAAD,8BACZ,gBAeFD,eAAiB,SAACE,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,6CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO9C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAkBpB,EAASqB,QAAO,SAAC3B,GAAD,OACtCA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYc,wBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAUe,eAAgBa,KAAKb,iBAC/B,cAAC,EAAD,CAAUN,SAAUoB,W,GA9BVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0d19d760.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className='card-container'>\r\n        <img alt='monsters' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2 key={props.monster.key}>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n        \r\n    );\r\n}","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.style.css\";\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card monster={monster} key={monster.id}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./input-box.style.css\";\r\nexport const InputBox = (props) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"input-text\"\r\n        type=\"search\"\r\n        placeholder=\"Search Monsters\"\r\n        onChange={props.onSearchChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { InputBox } from \"./components/input-box/input-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    \n  }\n\n  componentDidMount() {\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <InputBox onSearchChange={this.onSearchChange} />\n        <CardList monsters={filteredMonster}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}